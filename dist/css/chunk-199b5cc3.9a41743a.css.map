{"version":3,"sources":["webpack:///src/components/_CoreTaxes/Buttons/Button/GxButtonTaxes.vue","webpack:///src/components/_CoreTaxes/LedgerAccounts/src/components/_CoreTaxes/LedgerAccounts/GxLedgerAccountsListItem.vue"],"names":[],"mappings":"AA2OA,4BACE,uBAAgB,CAEhB,cAAe,CACf,mBAAoB,CACpB,kBAAqB,CACrB,kBAAmB,CACnB,mBAAoB,CACpB,uCAAwC,CACxC,0BAA2B,CAE3B,sCAAY,CAAZ,8BAAgC,CACjC,mCAEC,WAAkB,CAClB,eAAgB,CACjB,kDAEC,QAAS,CACV,8BAEC,iBAAkB,CACnB,yBAGC,iCACE,kBAAmB,CACnB,mBAAqB,CACrB,kBAAoB,CACpB,kBAAqB,CACrB,gBAAkB,CACnB,4BAEC,kBAAmB,CACnB,gBAAkB,CACnB,gCAEC,KAAM,CACN,gBAAiB,CAClB,kDAEC,KAAM,CACP,oCAEC,iBAAkB,CACnB,mDAEC,QAAS,CACV,8CAEC,WAAY,CACZ,mBAAoB,CACpB,iBAAmB,CACnB,gBAAiB,CACjB,mBAAoB,CACrB,CAMH,yBACE,YAAW,CACX,YAAW,CACX,wBAAoB,CAEpB,iBAAkB,CAClB,eAAgB,CAChB,+BAAW,CAAX,uBAA+B,CAChC,+BAGC,iBAAkB,CAClB,kCAAmC,CACnC,iCAAkC,CAClC,YAAa,CACb,UAAW,CACX,WAAY,CACZ,mBAAoB,CACpB,UAAW,CACX,yCAA0C,CAC1C,iBAAkB,CAClB,SAAU,CACV,sCAA+B,CAA/B,8BAA+B,CAC/B,2CAAW,CAAX,mCAAoB,CACrB,kDAGC,aAAc,CACf,0CAGC,GACE,UAAY,CACZ,0BAAW,CAAX,kBAAmB,CAErB,GACE,SAAU,CACV,2BAAW,CAAX,mBAAoB,CAAA,CATvB,kCAGC,GACE,UAAY,CACZ,0BAAW,CAAX,kBAAmB,CAErB,GACE,SAAU,CACV,2BAAW,CAAX,mBAAoB,CAAA,CAIxB,wCACE,GACE,sBAAuB,CACvB,qCAAsC,CACtC,mCAAoC,CACpC,8BAAW,CAAX,sBAAuB,CAEzB,GACE,sBAAuB,CACvB,qCAAsC,CACtC,mCAAoC,CACpC,+BAAW,CAAX,uBAAyB,CAAA,CAX7B,gCACE,GACE,sBAAuB,CACvB,qCAAsC,CACtC,mCAAoC,CACpC,8BAAW,CAAX,sBAAuB,CAEzB,GACE,sBAAuB,CACvB,qCAAsC,CACtC,mCAAoC,CACpC,+BAAW,CAAX,uBAAyB,CAAA,CAI7B,0BACE,UAAW,CACX,cAAe,CACf,WAAY,CACZ,qCAA8B,CAA9B,6BAA8B,CAC9B,2CAAoB,CAApB,mCAAoB,CACpB,8BAAwB,CAAxB,sBAAwB,CACxB,wCAAiC,CAAjC,gCAAiC,CACjC,4BAAqB,CAArB,oBAAqB,CACrB,0CAA2B,CAA3B,kCAAmC,CACpC,yBAGC,0BACE,UAAW,CACX,cAAe,CACf,WAAY,CACb,CC4SH,yBACA,sBAAA,CACA,kBAAA,CACA,eACA","file":"chunk-199b5cc3.9a41743a.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* stylelint-disable */\n.gx-button {\n  --initial-width: initial;\n\n  min-width: 2rem;\n  min-height: 3.125rem;\n  font-family: 'Nunito';\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  // Make loading end transition .1 seconds slower since it has just an icon and it looks like it's snapping faster on exit.\n  transition: all 0.6s ease-in-out;\n}\n.gx-button--plain {\n  min-width: initial;\n  min-height: 24px;\n}\n.gx-button--plain .slotContainer {\n  top: -2px;\n}\n.gx-button i {\n  font-size: inherit;\n}\n\n@screen de {\n  .variant-button {\n    min-height: 1.75rem;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n    font-family: 'Nunito';\n    font-size: 0.75rem;\n  }\n  .gx-button {\n    min-height: 2.75rem;\n    font-size: 0.75rem;\n  }\n  .slotContainer {\n    top: 0;\n    letter-spacing: 0;\n  }\n  .gx-button--plain .slotContainer {\n    top: 0;\n  }\n  .gx-height-variant {\n    min-height: 1.5rem;\n  }\n  .gx-height-variant .slotContainer {\n    top: -1px;\n  }\n  .gx-height-variant-secondary {\n    min-width: 0;\n    min-height: 1.125rem;\n    font-size: 0.625rem;\n    line-height: 15px;\n    text-transform: none;\n  }\n}\n\n// Ripple\n\n/* Ripple effect */\n.ripple {\n  --ripple-x: 0;\n  --ripple-y: 0;\n  --ripple-background: white;\n\n  position: relative;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n}\n\n.ripple::after {\n  position: absolute;\n  top: calc(var(--ripple-y) - 32.5px);\n  left: calc(var(--ripple-x) - 31px);\n  display: none;\n  width: 61px;\n  height: 65px;\n  pointer-events: none;\n  content: '';\n  background-color: var(--ripple-background);\n  border-radius: 50%;\n  opacity: 0;\n  transform-origin: center center;\n  animation: ripple 1s;\n}\n\n.ripple:focus:not(:active)::after {\n  display: block;\n}\n\n@keyframes ripple {\n  from {\n    opacity: 0.5;\n    transform: scale(0);\n  }\n  to {\n    opacity: 0;\n    transform: scale(10);\n  }\n}\n// Loader\n@keyframes spin {\n  from {\n    background: transparent;\n    border: 2px solid var(--secondary-300);\n    border-top-color: var(--primary-500);\n    transform: rotate(0deg);\n  }\n  to {\n    background: transparent;\n    border: 2px solid var(--secondary-300);\n    border-top-color: var(--primary-500);\n    transform: rotate(360deg);\n  }\n}\n\n.loading {\n  width: 50px;\n  min-width: 50px;\n  height: 50px;\n  transition: all 3s ease-in-out;\n  animation-name: spin;\n  animation-duration: 0.6s;\n  animation-timing-function: linear;\n  animation-delay: 1.3s;\n  animation-iteration-count: infinite;\n}\n\n@screen de {\n  .loading {\n    width: 44px;\n    min-width: 44px;\n    height: 44px;\n  }\n}\n","<script>\nimport GxIcon from '@components/_Core/Icons/GxIcon'\nimport {\n  LEDGER_ACCOUNT_UPDATE,\n  CONFIG_SET_BEGINNING_BALANCE,\n} from '@src/apollo/mutations'\nimport Big from 'big.js'\n\nexport default {\n  name: 'GxLedgerAccountsListItem',\n  data() {\n    return {\n      accountingFirmNumber: null,\n      clientNumber: null,\n      expand: false,\n      showInputEdit: false,\n      previousName: '',\n      childrensBeginningBalance: new Array(),\n      childrenNumber: null,\n      showInputBeginningBalance: false,\n    }\n  },\n  components: {\n    GxIcon,\n    GxLedgerAccountsList: () =>\n      //   // Debido a que son componentes recursivos marca error al importar por que genera una dependencia de bucle,\n      //   // por lo que la solución fue agregar una importación dinamica, se reviso con Jhonatan\n      import('@components/_CoreTaxes/LedgerAccounts/GxLedgerAccountsList'),\n  },\n  created() {\n    this.expand = this.showCollapsed\n    this.accountingFirmNumber = this.accountingFirmNumberProp\n    this.clientNumber = this.clientNumberProp\n    this.childrenNumber = this.childrenNumberProp\n    //console.log(this.ledgerAccount)\n    if (this.ledgerAccount.parent !== null) {\n      if (\n        (this.ledgerAccount.subAccounts ?? []).length === 0 &&\n        this.editBeginningBalances\n      ) {\n        // setTimeout(() => {\n        this.$emit(\n          'recalculatedParent',\n          this.ledgerAccount.beginningBalance,\n          this.childrenNumber\n        )\n      }\n    }\n    if (this.editBeginningBalances)\n      this.ledgerAccount.beginningBalance = this.getBinningBalanceInitial()\n  },\n  watch: {\n    editBeginningBalances() {\n      // console.log('lectura')\n      if (this.ledgerAccount.parent !== null) {\n        if (\n          (this.ledgerAccount.subAccounts ?? []).length === 0 &&\n          this.editBeginningBalances\n        ) {\n          // setTimeout(() => {\n          this.$emit(\n            'recalculatedParent',\n            this.ledgerAccount.beginningBalance,\n            this.childrenNumber\n          )\n        }\n      }\n    },\n  },\n  props: {\n    childrenNumberProp: {\n      type: Number,\n      default: null,\n    },\n    ledgerAccountProp: {\n      type: Object,\n      default: null,\n    },\n    editCatalog: {\n      type: Boolean,\n      default: false,\n    },\n    editBeginningBalances: {\n      type: Boolean,\n      default: false,\n    },\n    showCollapsed: {\n      type: Boolean,\n      default: false,\n    },\n    showArrowCollapse: {\n      type: Boolean,\n      default: false,\n    },\n    showHover: {\n      type: Boolean,\n      default: true,\n    },\n    justThisItem: {\n      type: Boolean,\n      default: false,\n    },\n    accountingFirmNumberProp: {\n      type: String,\n      default: null,\n    },\n    clientNumberProp: {\n      type: String,\n      default: null,\n    },\n    isInitial: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    ledgerAccount() {\n      return this.ledgerAccountProp\n    },\n    getNumberOfAccountsByParts() {\n      return this.ledgerAccount.number.split('-')\n    },\n    getSubAccountsCount() {\n      if (this.ledgerAccount.subAccounts === undefined) return 0\n      if (this.ledgerAccount.subAccounts === null) return 0\n      return this.ledgerAccount.subAccounts.length\n    },\n    getNature() {\n      return this.ledgerAccount.nature === 'D' ? 'Deudora' : 'Acreedora'\n    },\n    getCurrency() {\n      return 'MXN'\n    },\n    getParentBeginningBalances() {\n      let suma = new Big(0)\n      this.childrensBeginningBalance.forEach(function(balance) {\n        if (balance == '') balance = '0'\n        suma = suma.plus(balance)\n      })\n      return this.formatDecimal(suma.toFixed(2).toString())\n    },\n  },\n  methods: {\n    getBinningBalanceInitial() {\n      let value = this.formatDecimal(\n        this.ledgerAccount.beginningBalance.toString()\n      )\n      //if (value === '0') this.saveBeginningBalance()\n      return value == '0' ? '' : value\n    },\n    showSubAccounts() {\n      if (!this.editBeginningBalances) {\n        this.expand = !this.expand\n        if (this.expand) {\n          setTimeout(() => {\n            this.validateViewSubList()\n          }, 2000)\n        }\n      }\n    },\n    async onBlur(e) {\n      this.hasFocus = false\n      const value = this.formatDecimal(e.target.value.replace(/[^0-9.]/g, ''))\n      e.target.value = value\n      this.showInputBeginningBalance = false\n\n      this.saveBeginningBalance()\n      return\n    },\n    async saveBeginningBalance() {\n      try {\n        //const response =\n        await this.$apollo.mutate({\n          mutation: CONFIG_SET_BEGINNING_BALANCE,\n          variables: {\n            accountingFirmNumber: this.accountingFirmNumber,\n            clientNumber: this.clientNumber,\n            ledgerAccountId: this.ledgerAccount.ledgerAccountId,\n            beginningBalance: this.ledgerAccount.beginningBalance,\n          },\n        })\n      } catch (error) {\n        console.log(error)\n        return null\n      }\n    },\n    onKeyDownBeginningBalance(e) {\n      const keyCodes = [110, 8, 37, 39, 9, 46]\n      if (e.altKey || e.ctrlKey || e.shiftKey) {\n        e.preventDefault()\n        e.stopPropagation()\n        return\n      }\n\n      if (\n        (e.keyCode >= 48 && e.keyCode <= 57) ||\n        (e.keyCode >= 96 && e.keyCode <= 105) ||\n        keyCodes.includes(e.keyCode)\n      ) {\n        if (e.keyCode == 110 && e.target.value.indexOf('.') > -1)\n          e.preventDefault()\n      } else {\n        e.preventDefault()\n      }\n    },\n    onKeyUpBegginningBalance(e) {\n      e.target.value = e.target.value.replace(/(\\.\\d{6})\\d+/g, '$1')\n      if (this.ledgerAccount.parent !== null) {\n        this.$emit('recalculatedParent', e.target.value, this.childrenNumber)\n      }\n    },\n    editMajorLedgerAccount() {\n      this.$emit('editMajorLedgerAccount')\n    },\n    formatDecimal(text) {\n      // console.log(text)\n      // console.log(text === '0.00')\n      if (text.includes('.')) {\n        if (text == '0') return ''\n        if (text === '0.00') return ''\n        return text\n          .replace(/^\\d+\\.$/, '$&00')\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n      } else {\n        //return (\n        text = text\n          .replace(/^\\d+\\.$/, '$&00')\n          .replace(/\\.\\d$/, '0$&0')\n          .replace(/\\d+\\.$/, '$&00')\n          .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        if (text == '0') return ''\n        if (text == '0' || text == '') return text\n        return text + '.00'\n        //)\n      }\n    },\n    KeyPressformatDecimal(text) {\n      if (text.includes('.')) {\n        // console.log(text)\n        // console.log(text === '0.00')\n        if (text === '0.00') return ''\n        return text.replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n      } else {\n        text\n          .replace(/^\\d+\\.$/, '$&00')\n          .replace(/\\.\\d$/, '0$&0')\n          .replace(/\\d+\\.$/, '$&00')\n          .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        if (text == '0') return ''\n        if (text == '0' || text == '') return text\n        return text + '.00'\n      }\n    },\n    editLedgerAccount(ledgerAccountParent) {\n      let auxLedgerAccountParent = JSON.parse(\n        JSON.stringify(this.ledgerAccount)\n      )\n      auxLedgerAccountParent.subAccounts =\n        ledgerAccountParent === null ? null : [ledgerAccountParent]\n      //console.log(auxLedgerAccountParent)\n      this.$emit('editLedgerAccount', auxLedgerAccountParent)\n    },\n    createSubLedgerAccount(ledgerAccountParent) {\n      let auxLedgerAccountParent = JSON.parse(\n        JSON.stringify(this.ledgerAccount)\n      )\n      auxLedgerAccountParent.subAccounts =\n        ledgerAccountParent === null ? null : [ledgerAccountParent]\n      // console.log(auxLedgerAccountParent)\n      this.$emit('createSubLedgerAccount', auxLedgerAccountParent)\n    },\n    deleteLedgerAccount(deleteLedgerAccount) {\n      // console.log(deleteLedgerAccount)\n      this.$emit('deleteLedgerAccount', deleteLedgerAccount)\n    },\n    editName() {\n      if (this.editCatalog) {\n        this.showInputEdit = true\n        this.previousName = this.ledgerAccount.name\n      }\n      this.timeout = setTimeout(() => {\n        this.$refs.gxInput.focus()\n      }, 100)\n      this.$once('hook:beforeDestroy', () => {\n        if (this.timeout) {\n          clearTimeout(this.timeout)\n        }\n      })\n    },\n    focusoutEditName() {\n      this.showInputEdit = false\n    },\n    async enterEditName() {\n      this.previousName = ''\n      this.showInputEdit = false\n      this.EditLedgerAccount()\n    },\n    escEditName() {\n      this.ledgerAccount.name = this.previousName\n      this.showInputEdit = false\n    },\n    recalculatedParent(amount, childrenN) {\n      let amountNumber = (amount + '').replace(',', '')\n\n      this.$set(this.childrensBeginningBalance, childrenN, amountNumber)\n      if (this.ledgerAccount.parent !== null) {\n        this.$emit(\n          'recalculatedParent',\n          this.getParentBeginningBalances,\n          this.childrenNumber\n        )\n      }\n    },\n    getPositionTop() {\n      let element = this.$refs.subList\n      //console.log(element)\n\n      var offset = 0\n      while (element) {\n        offset += element['offsetTop']\n        element = element.offsetParent\n      }\n      return offset\n    },\n    validateViewSubList() {\n      let elt = this.$refs.subList\n      if (!elt) {\n        // Element not found.\n        return false\n      }\n      // Get the top and bottom position of the given element.\n      var posTop = this.getPositionTop(elt)\n      // console.log(posTop)\n\n      var posBottom = posTop + elt.offsetHeight\n      // Get the top and bottom position of the *visible* part of the window.\n      var visibleTop = document.body.scrollTop\n      var visibleBottom = visibleTop + document.documentElement.offsetHeight\n      return posBottom >= visibleTop && posTop <= visibleBottom\n    },\n    async EditLedgerAccount() {\n      try {\n        await this.$apollo.mutate({\n          mutation: LEDGER_ACCOUNT_UPDATE,\n          variables: {\n            accountingFirmNumber: this.accountingFirmNumber,\n            clientNumber: this.clientNumber,\n            ledgerAccountId: this.ledgerAccount.ledgerAccountId,\n            input: {\n              number: this.ledgerAccount.number,\n              name: this.ledgerAccount.name,\n              type: this.ledgerAccount.ledgerAccountType.type,\n              subType: this.ledgerAccount.ledgerAccountType.subType,\n              subSubType: this.ledgerAccount.ledgerAccountType.subSubType,\n              nature: this.ledgerAccount.nature,\n              // additionalDataLocalized: {\n              //   codigoAgrupadorDelSat: this.ledgerAccountEdit\n              //     .additionalDataLocalized.codigoAgrupadorDelSat,\n              // },\n            },\n          },\n        })\n        //console.log(response)\n      } catch (error) {\n        console.log(error)\n        return null\n      }\n    },\n    onFocusBeginningBalance(e) {\n      e.target.value = e.target.value.replace(',', '')\n    },\n    showBeginningBalance() {\n      this.showInputBeginningBalance = !this.showInputBeginningBalance\n      this.timeout = setTimeout(() => {\n        this.$refs.inputBeginningBalance.focus()\n        this.$refs.inputBeginningBalance.select()\n      }, 100)\n      this.$once('hook:beforeDestroy', () => {\n        if (this.timeout) {\n          clearTimeout(this.timeout)\n        }\n      })\n    },\n    hideBeginningBalance() {\n      this.showInputBeginningBalance = false\n    },\n  },\n}\n</script>\n\n<template>\n  <li class=\"\">\n    <div\n      class=\"group flex align-middle rounded \"\n      :class=\"{\n        'cursor-pointer': getSubAccountsCount > 0,\n        'pt-1 pb-1 hover:bg-ledgerAccountlist-hover': showHover,\n        'mb-1': !showHover,\n      }\"\n      @click=\"showSubAccounts\"\n    >\n      <div\n        class=\"inline-flex w-4 pl-1 font-bold\"\n        :class=\"[\n          'text-ledgerAccountTypes-' + ledgerAccount.ledgerAccountType.type,\n        ]\"\n      >\n        {{ ledgerAccount.parent === null ? 'M' : ' ' }}</div\n      >\n      <div v-if=\"showArrowCollapse\" class=\"inline-flex w-4 ml-3\"\n        ><GxIcon\n          v-if=\"getSubAccountsCount > 0\"\n          class=\"flex justify-end flex-grow w-4 h-4 pt-px pr-1.3px border border-solid rounded-full cursor-pointer border-ledgerAccountlist-arrowBorder text-list-arrowBorder\"\n          :icon=\"!expand ? 'chevron_right' : 'expand_less'\"\n          :class=\"{ 'bg-ledgerAccountList-arrow': !expand }\"\n      /></div>\n      <div\n        class=\"inline-flex text-white ml-3\"\n        :class=\"{\n          'ml-3': showArrowCollapse && getSubAccountsCount > 0,\n          'ml-4': showArrowCollapse && getSubAccountsCount === 0,\n        }\"\n      >\n        <span\n          class=\"pt-1 pb-2px mr-px font-bold text-2xs\"\n          v-for=\"(item, idx) in getNumberOfAccountsByParts\"\n          :class=\"[\n            'bg-ledgerAccountTypes-' + ledgerAccount.ledgerAccountType.type,\n            {\n              'rounded-tl rounded-bl pl-2 pr-1': idx === 0,\n              'pl-1 pr-2 rounded-r':\n                idx === getNumberOfAccountsByParts.length - 1 &&\n                !getSubAccountsCount > 0,\n              'pl-2 pr-2':\n                (idx !== 0 && idx !== getNumberOfAccountsByParts.length - 1) ||\n                (idx !== 0 &&\n                  idx == getNumberOfAccountsByParts.length - 1 &&\n                  getSubAccountsCount > 0),\n            },\n          ]\"\n          :key=\"idx\"\n        >\n          {{ item }}\n        </span>\n      </div>\n      <div class=\"inline-flex pl-5 pt-2px sm:hover:bg-secondary-20 w-full\">\n        <div\n          class=\"inline-flex\"\n          :class=\"{ 'w-full': this.showInputEdit }\"\n          @click.prevent.stop=\"editName\"\n          :ledgerAccountId=\"ledgerAccount.ledgerAccountId\"\n        >\n          <span\n            v-show=\"!this.showInputEdit\"\n            class=\"cortar\"\n            :class=\"{\n              'font-bold': getSubAccountsCount > 0,\n            }\"\n          >\n            {{ ledgerAccount.name }}</span\n          >\n          <!-- ref=\"nameLedgerAccount\" -->\n\n          <input\n            class=\"w-full mr-5 pl-2 pt-px pb-px rounded-sm\"\n            v-show=\"this.showInputEdit\"\n            v-model=\"ledgerAccount.name\"\n            ref=\"gxInput\"\n            @focusout.prevent.stop=\"enterEditName\"\n            @keydown.enter.prevent.stop=\"enterEditName\"\n            @keydown.esc.prevent.stop=\"escEditName\"\n          />\n        </div>\n\n        <!-- Edit -->\n        <div\n          v-if=\"editCatalog && !this.showInputEdit\"\n          class=\"text-ledgerAccountlist-editItems -mb-1\"\n        >\n          <div class=\"pl-5 pr-5 hidden group-hover:block\"\n            ><GxIcon\n              :icon=\"'edit'\"\n              class=\"cursor-pointer\"\n              v-bind:style=\"{ fontSize: '18px' }\"\n              :title=\"'Editar'\"\n              @click.prevent.stop=\"editLedgerAccount(null)\"\n            />\n            <GxIcon\n              :icon=\"'library_add'\"\n              class=\"pl-2 cursor-pointer\"\n              v-bind:style=\"{ fontSize: '18px' }\"\n              @click.prevent.stop=\"createSubLedgerAccount(null)\"\n            />\n            <GxIcon\n              :icon=\"'delete'\"\n              class=\"pl-2 cursor-pointer\"\n              v-bind:style=\"{ fontSize: '18px' }\"\n              @click.prevent.stop=\"deleteLedgerAccount(ledgerAccount)\"\n            />\n          </div>\n        </div>\n        <!-- End Edit -->\n\n        <!-- BeginningBalances -->\n        <div\n          class=\"flex h-5 right-0 absolute w-86 justify-between items-stretch\"\n          v-if=\"\n            this.editBeginningBalances &&\n              this.isInitial &&\n              !this.showInputBeginningBalance\n          \"\n        >\n          <div class=\"flex flex-col w-46 font-black text-right pr-3\">\n            <span v-if=\"getSubAccountsCount > 0\" class=\"font-black pr-1\">\n              $\n              {{\n                getParentBeginningBalances === ''\n                  ? '0.00'\n                  : getParentBeginningBalances\n              }}</span\n            >\n            <!-- @keyup=\"this.keyUpTxtBeginningBalances\" -->\n            <!-- @blur=\"onBlur\" -->\n            <!-- pattern=\"^\\d*(\\.\\d{0,2})?$\" -->\n\n            <input\n              v-else\n              type=\"text\"\n              step=\"0.01\"\n              v-model=\"ledgerAccount.beginningBalance\"\n              class=\"border rounded-md text-right pr-1\"\n              @keydown=\"this.onKeyDownBeginningBalance\"\n              @keyup=\"this.onKeyUpBegginningBalance\"\n              @blur=\"this.onBlur\"\n              @focus=\"this.onFocusBeginningBalance\"\n              inputmode=\"decimal\"\n              @onclick=\"this.select()\"\n            />\n          </div>\n          <div class=\"flex flex-col w-15 font-bold\">{{ this.getCurrency }}</div>\n          <div class=\"flex flex-col w-18 font-bold mr-5\">{{\n            this.getNature\n          }}</div>\n        </div>\n\n        <div\n          v-else-if=\"this.editBeginningBalances\"\n          class=\"flex h-5 right-0 absolute w-86 justify-between items-stretch\"\n          :initial=\"ledgerAccount.beginningBalance\"\n        >\n          <div class=\"flex flex-col w-46 font-black text-right\">\n            <span v-if=\"getSubAccountsCount > 0\" class=\"font-black pr-2\">\n              {{\n                getParentBeginningBalances === ''\n                  ? '0.00'\n                  : getParentBeginningBalances\n              }}</span\n            >\n            <!-- @keyup=\"this.keyUpTxtBeginningBalances\" -->\n            <!-- @blur=\"onBlur\" -->\n            <!-- pattern=\"^\\d*(\\.\\d{0,2})?$\" -->\n            <span\n              v-else-if=\"\n                getSubAccountsCount === 0 &&\n                  !this.isInitial &&\n                  !this.showInputBeginningBalance\n              \"\n              class=\"pr-2\"\n            >\n              {{\n                ledgerAccount.beginningBalance\n                  ? formatDecimal(ledgerAccount.beginningBalance.toString())\n                  : '-'\n              }}</span\n            >\n            <input\n              ref=\"inputBeginningBalance\"\n              v-else\n              type=\"text\"\n              step=\"0.01\"\n              v-model=\"ledgerAccount.beginningBalance\"\n              class=\"border rounded-md text-right pr-2\"\n              @keydown=\"this.onKeyDownBeginningBalance\"\n              @keyup=\"this.onKeyUpBegginningBalance\"\n              @blur=\"this.onBlur\"\n              @focus=\"this.onFocusBeginningBalance\"\n              inputmode=\"decimal\"\n              @onclick=\"this.select()\"\n            />\n          </div>\n          <div class=\"flex w-5 pl-2 pr-11 items-center\">\n            <!-- text-gray-500 -->\n            <GxIcon\n              v-if=\"!this.showInputEdit && getSubAccountsCount === 0\"\n              :icon=\"'edit'\"\n              class=\"cursor-pointer text-ledgerAccountlist-editItems -mt-1 hidden group-hover:block\"\n              v-bind:style=\"{ fontSize: '18px' }\"\n              :title=\"'Editar'\"\n              @click=\"showBeginningBalance\"\n            />\n          </div>\n          <div\n            v-if=\"!this.showInputEdit\"\n            class=\"flex flex-col w-18 font-bold mr-22\"\n            >{{ this.getNature }}</div\n          >\n        </div>\n        <!-- End BeginningBalances -->\n      </div>\n    </div>\n\n    <transition name=\"slide\" v-if=\"getSubAccountsCount > 0\">\n      <div v-show=\"expand && !justThisItem\">\n        <GxLedgerAccountsList\n          :accountingFirmNumberProp=\"accountingFirmNumber\"\n          :clientNumberProp=\"clientNumber\"\n          :ledgerAccountsProp=\"\n            ledgerAccount.subAccounts === null ? [] : ledgerAccount.subAccounts\n          \"\n          :key=\"ledgerAccount.ledgerAccountId\"\n          :name=\"ledgerAccount.ledgerAccountId\"\n          :editCatalog=\"editCatalog\"\n          :showCollapsed=\"showCollapsed\"\n          :showArrowCollapse=\"showArrowCollapse\"\n          :editBeginningBalances=\"editBeginningBalances\"\n          :showHover=\"showHover\"\n          :isInitial=\"isInitial\"\n          @editLedgerAccount=\"editLedgerAccount\"\n          @createSubLedgerAccount=\"createSubLedgerAccount\"\n          @deleteLedgerAccount=\"deleteLedgerAccount\"\n          @recalculatedParent=\"recalculatedParent\"\n          :justThisItem=\"justThisItem\"\n        />\n        <div ref=\"subList\"></div>\n      </div>\n    </transition>\n  </li>\n</template>\n\n<style scoped>\n.slide-enter-active {\n  transition-duration: 0.1s;\n  transition-timing-function: ease-in;\n}\n\n.slide-leave-active {\n  transition-duration: 0.1s;\n  transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\n}\n\n.slide-enter-to,\n.slide-leave {\n  max-height: 100px;\n  overflow: hidden;\n}\n\n.slide-enter,\n.slide-leave-to {\n  overflow: hidden;\n  max-height: 0;\n}\n.hideText {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n}\n\n.cortar {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n</style>\n"]}